<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-4.0.xsd">
 
    <!-- enable use-expressions -->
	<http auto-config="true" use-expressions="true">
 		<!-- Restrict admin pages to those with role of admin  -->
 		
		<intercept-url pattern="/admin" access="hasRole('ROLE_ADMIN')"/>
		<intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')"/>
		<intercept-url pattern="/list**" access="hasRole('ROLE_USER')" />
 
		<!-- access denied page -->
		<access-denied-handler error-page="/403" />
 
		<form-login 
		    login-page="/login1" 
		    login-processing-url="/j_spring_security_check"
		    
		    
		    default-target-url="/list?all" 
			authentication-failure-url="/login1?error" 
			username-parameter="username"
			password-parameter="password" />
		<logout logout-success-url="/login1?logout" logout-url="/j_spring_security_logout" />
		<!-- enable csrf protection -->
		<csrf/>
	</http>
 
	<!-- Select users and user_roles from database -->
	<authentication-manager>
	  <authentication-provider>
		<jdbc-user-service data-source-ref="dataSource"
		  users-by-username-query=
		    "select username,password, enabled from users where username=?"
		  authorities-by-username-query=
		    "select username, role from user_roles where username=?  " />
	  </authentication-provider>
	</authentication-manager>
 
</beans:beans>